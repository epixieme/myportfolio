{"version":3,"sources":["component/Images/robofriends.svg","component/navigation/logo.svg","component/portfolio/Projects.js","component/portfolio/Portfolio.js","component/portfolio/PortFolioList.js","component/navigation/NavBar.js","component/headline/Headline.js","component/Contact.js","component/About.js","container/App.js","serviceWorker.js","index.js"],"names":["module","exports","Projects","id","title","url","image","alt","src","robofriends","style","width","height","Portfolio","props","className","href","PortFolioList","map","items","i","NavBar","logo","Headline","Contact","as","type","value","About","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,yC,kBCA3CD,EAAOC,QAAU,IAA0B,kC,sOCM9BC,EAAU,CACvB,CACAC,GAAG,EACHC,MAAM,kBACNC,IAAI,2CACJC,MAAM,yBAAKC,IAAI,GAAGC,IAAKC,IAAaC,MAAO,CAACC,MAAM,QAAQC,OAAO,YAEjE,CAACT,GAAG,EACJC,MAAM,gBACNC,IAAI,2CACJC,MAAM,yBAAKC,IAAI,GAAGC,IAAKC,IAAaC,MAAO,CAACC,MAAM,QAAQC,OAAO,YAEjE,CAACT,GAAG,EACJC,MAAM,cACNC,IAAI,yCACJC,MAAM,yBAAKC,IAAI,GAAGC,IAAKC,IAAaC,MAAO,CAACC,MAAM,QAAQC,OAAO,YAEjE,CAACT,GAAG,EACJC,MAAM,cACNC,IAAI,yCACJC,MAAM,yBAAKC,IAAI,GAAGC,IAAKC,IAAaC,MAAO,CAACC,MAAM,QAAQC,OAAO,YAEjE,CAACT,GAAG,EACJC,MAAM,cACNC,IAAI,yCACJC,MAAM,yBAAKC,IAAI,GAAGC,IAAKC,IAAaC,MAAO,CAACC,MAAM,QAAQC,OAAO,aClBlDC,G,MAVC,SAACC,GACjB,OACC,6BACM,uBAAGC,UAAU,SAASD,EAAMV,OAC9B,2BAAIU,EAAMR,OACb,uBAAGS,UAAU,MAAMC,KAAMF,EAAMT,SCqBlBY,MAzBf,YAAmC,IAAXf,EAAU,EAAVA,SACvB,OACD,6BACC,yBAAKa,UAAU,aACf,wBAAIZ,GAAG,aAAP,gBACA,uBAAGY,UAAU,qBAAb,0HAED,yBAAKA,UAAW,uBAEfb,EAASgB,KAAI,SAACC,EAAOC,GACtB,OAEC,kBAAC,EAAD,CACChB,MAAQF,EAASkB,GAAGhB,MACpBE,MAAOJ,EAASkB,GAAGd,MACbH,GAAID,EAASkB,GAAGjB,GAChBE,IAAMH,EAASkB,GAAGf,Y,wBCEXgB,MAnBf,WAEC,OAGD,4BAAQN,UAAW,UACnB,yBAAKA,UAAU,QACf,yBAAKP,IAAKc,IAAMf,IAAI,eAAeG,MAAO,CAACC,MAAM,QAAQC,OAAO,YAE/D,yBAAKG,UAAU,OACd,uBAAGC,KAAK,YAAR,YACA,uBAAGA,KAAK,cAAR,aACA,uBAAGA,KAAK,cAAR,mBCOaO,G,MApBC,WAEf,OACD,6BACA,yBAAKR,UAAU,aAEd,wBAAIA,UAAY,kBAAhB,wBAIA,yBAAKA,UAAY,aACjB,wBAAIA,UAAY,mBAAhB,6CCAcS,EAXA,WACd,OAED,yBAAKT,UAAW,WACV,4BAAQA,UAAW,gBAAgBU,GAAG,QAAQtB,GAAG,YAAauB,KAAK,SAASC,MAAM,UAAS,uBAAGX,KAAK,2BAAR,mBCUlFY,EAbH,WAEX,OAGD,yBAAKb,UAAU,SACR,wBAAIZ,GAAG,WAAP,eACA,uBAAGY,UAAU,gBAAb,qJCaQc,EAZL,WACR,OACC,yBAAKd,UAAU,YACZ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACL,kBAAC,EAAD,CAAeb,SAAUA,M,MCNN4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4fad4d48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/robofriends.cbe7be7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.e9f69585.svg\";","  \nimport React from 'react'\nimport robofriends from '../Images/robofriends.svg'\n\n\n\nexport const Projects =[\n{\nid:1,\ntitle:'Journey to Mars',\nurl:\"https://codepen.io/epixieme/full/LYPGeNB\",\nimage:<img alt='' src={robofriends} style={{width:'510px',height:'344px'}} />\n},\n{id:2,\ntitle:'Shopping List',\nurl:\"https://codepen.io/epixieme/full/LYPGeNB\",\nimage:<img alt='' src={robofriends} style={{width:'510px',height:'344px'}} />\n},\n{id:3,\ntitle:'Robofriends',\nurl:\"https://epixieme.github.io/robofriends\",\nimage:<img alt='' src={robofriends} style={{width:'510px',height:'344px'}} />\n},\n{id:4,\ntitle:'Robofriends',\nurl:\"https://epixieme.github.io/robofriends\",\nimage:<img alt='' src={robofriends} style={{width:'510px',height:'344px'}} />\n},\n{id:5,\ntitle:'Robofriends',\nurl:\"https://epixieme.github.io/robofriends\",\nimage:<img alt='' src={robofriends} style={{width:'510px',height:'344px'}} />\n}]\n\nexport default Projects\n\n\n","import React from 'react'\nimport './portfolio.css'\n//this function renders the props from PortfolioList.js to the page\nconst Portfolio=(props)=>{\nreturn (\n\t<div>\n      \t<p className='title'>{props.title}</p>\n\t    <p>{props.image}</p>\n\t\t<a className='url' href={props.url}></a>\n      </div>\n\n\t)\n}\nexport default Portfolio","import React from 'react'\nimport Portfolio from './Portfolio'\n\n//this function passes the object properties in projects array to the following prop names\nfunction PortFolioList({Projects}){\n\treturn (\n<div>\n\t<div className='portfolio'>\n\t<h1 id='portfolio'>Portfolio...</h1>\n\t<p className='portfolioprologue'>I am constantly working on new and open source projects, if you wish take a look at my work and contributions below: </p>\n\t</div>\n<div className ='images grid-wrapper'>\n{\n\tProjects.map((items, i)=>{\nreturn (\n\n\t<Portfolio \n\t\ttitle= {Projects[i].title} \n\t\timage={Projects[i].image}\n        id={Projects[i].id} \n        url ={Projects[i].url}\n      />)\n\n\t})\n}\n</div>\n</div>\n\t)}\n\nexport default PortFolioList","import React from 'react'\nimport './NavBar.css'\nimport logo from './logo.svg'\nfunction NavBar(){\n\n\treturn (\n\n\n<header className ='NavBar'>\n<div className=\"logo\">\n<img src={logo} alt=\"website logo\" style={{width:'350px',height:'200px'}}/>\n</div>\t\n\t<nav className='Nav'>\n\t\t<a href=\"#aboutme\">About me</a>\n\t\t<a href=\"#portfolio\">Portfolio</a>\n\t\t<a href=\"#contactme\">Get in touch</a>\n</nav>\n</header>\n\n\t\t)\n}\n\nexport default NavBar","import React from 'react'\nimport './Headline.css'\nconst Headline =()=>{\n\n\treturn (\n<div>\n<div className='headline1'>\n\n <h1 className = 'paragraphStyle'>Hello, I'm Kirstie </h1>\n      \n </div>\n\n <div className = 'headline2'>\n <h3 className = 'paragraphStyle2'>...An East London based web developer</h3>\n\n </div>\n </div>\n\n\t\t)\n}\n\n\nexport default Headline","import React from 'react'\n\nconst Contact =()=>{\n\treturn (\n\n<div className ='contact'>\n      <button className ='contactButton' as=\"input\" id='contactme'  type='button' value=\"submit\"><a href=\"mailto:mail@example.com\" >Get In Touch</a></button>\n    </div>\n\n\t\t)\n}\n\n\nexport default Contact","import React from 'react'\n\n\nconst About=()=>{\n\n\treturn (\n\n\n<div className='about'>\n      \t<h1 id='aboutme'>About me...</h1>\n      \t<p className=\"myBackground\">My origins lie in Yorkshire but I moved to London to find my destiny. I am a full stack developer with modern Javascript, React, Css3 and HTML5</p>\n      </div>\n\n\t\t)\n}\n\nexport default About","import React from 'react';\nimport './App.css';\nimport {Projects} from '../component/portfolio/Projects'\nimport PortFolioList from '../component/portfolio/PortFolioList'\nimport NavBar from '../component/navigation/NavBar'\nimport Headline from '../component/headline/Headline'\nimport Contact from '../component/Contact'\nimport About from '../component/About'\n// import Portfolio from '../component/Portfolio'\n\n\nconst App=()=> {\n  return (\n  \t<div className=\"toplevel\">\n      <NavBar  />\t\n      <Headline />\n      <Contact />\n      <About />\n\t<PortFolioList Projects={Projects} />\n\n  </div>\n   )\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App'\nimport 'tachyons'\n// import './fonts/Humger.ttf'\n// import shoreditch from './component/Images/shoreditch.png'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}